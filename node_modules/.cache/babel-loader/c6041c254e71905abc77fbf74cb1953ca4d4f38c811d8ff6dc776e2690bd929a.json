{"ast":null,"code":"import Card from'react-bootstrap/Card';import{useState,useEffect}from'react';import accountService from'../../services/accountPost';import postService from'../../services/accountService';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const ViewAllAccounts=()=>{const[accounts,setAccounts]=useState([]);const[isLoading,setIsLoading]=useState(false);const[error,setError]=useState(null);useEffect(()=>{setIsLoading(true);postService.listAllAccountsAdmin().then(response=>{setAccounts(response.data);setIsLoading(false);}).catch(error=>{console.error('Error fetching accounts:',error);setError(error.message);setIsLoading(false);});},[]);return/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"mt-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"mb-4\",children:isLoading?/*#__PURE__*/_jsx(\"div\",{children:\"Loading accounts...\"}):/*#__PURE__*/_jsxs(_Fragment,{children:[error&&/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-danger mt-3\",children:error}),accounts.map(account=>/*#__PURE__*/_jsx(\"div\",{className:\"mb-4\",children:/*#__PURE__*/_jsxs(Card,{border:\"dark\",style:{width:'40 rem'},children:[/*#__PURE__*/_jsxs(Card.Header,{children:[\"Account Type: \",account.accountType]}),/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsxs(Card.Title,{children:[\"Account Number: \",account.accountNumber]}),/*#__PURE__*/_jsxs(Card.Text,{children:[\"First Name:\",account.firstName,/*#__PURE__*/_jsx(\"br\",{}),\"Last Name:\",account.lastName,/*#__PURE__*/_jsx(\"br\",{}),\"Account Type: \",account.accountType,/*#__PURE__*/_jsx(\"br\",{}),\"Balance: \",account.balance,/*#__PURE__*/_jsx(\"br\",{}),\"User ID: \",account.userId,/*#__PURE__*/_jsx(\"br\",{}),\"Phone Number:\",account.phoneNumber,/*#__PURE__*/_jsx(\"br\",{})]})]})]})},account.id))]})})})});};export default ViewAllAccounts;","map":{"version":3,"names":["Card","useState","useEffect","accountService","postService","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ViewAllAccounts","accounts","setAccounts","isLoading","setIsLoading","error","setError","listAllAccountsAdmin","then","response","data","catch","console","message","className","children","map","account","border","style","width","Header","accountType","Body","Title","accountNumber","Text","firstName","lastName","balance","userId","phoneNumber","id"],"sources":["/Users/architapalkar/Desktop/System-Protocol-Project/Secure-banking-system/src/pages/ViewAllAccounts/ViewAllAccounts.js"],"sourcesContent":["import Card from 'react-bootstrap/Card';\n\nimport { useState, useEffect } from 'react';\nimport accountService from '../../services/accountPost';\nimport postService from '../../services/accountService';\nconst ViewAllAccounts = () => {\n    const [accounts, setAccounts] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        setIsLoading(true);\n        postService.listAllAccountsAdmin()\n            .then((response) => {\n                setAccounts(response.data);\n                setIsLoading(false);\n            })\n            .catch((error) => {\n                console.error('Error fetching accounts:', error);\n                setError(error.message);\n                setIsLoading(false);\n            });\n    }, []);\n\n    return (\n        <div className=\"container\">\n            <div className=\"mt-4\">\n                <div className=\"mb-4\">\n                    {isLoading ? (\n                        <div>Loading accounts...</div>\n                    ) : (\n                        <>\n                            {error && <div className=\"alert alert-danger mt-3\">{error}</div>}\n                            {accounts.map((account) => (\n                                <div key={account.id} className='mb-4'>\n                                    <Card border=\"dark\" style={{ width: '40 rem' }}>\n                                        <Card.Header>Account Type: {account.accountType}</Card.Header>\n                                        <Card.Body>\n                                            <Card.Title>Account Number: {account.accountNumber}</Card.Title>\n                                            <Card.Text>\n                                                First Name:{account.firstName}<br />\n                                                Last Name:{account.lastName}<br />\n                                                Account Type: {account.accountType}<br />\n                                                Balance: {account.balance}<br />\n                                                User ID: {account.userId}<br />\n                                                Phone Number:{account.phoneNumber}<br />\n\n                                            </Card.Text>\n                                        </Card.Body>\n                                    </Card>\n                                </div>\n                            ))}\n                        </>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\nexport default ViewAllAccounts;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}