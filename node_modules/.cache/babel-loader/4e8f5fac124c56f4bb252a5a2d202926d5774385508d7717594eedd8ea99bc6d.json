{"ast":null,"code":"var _jsxFileName = \"/Users/architapalkar/Desktop/System-Protocol-Project/Secure-banking-system/src/pages/AccountInfo/AccountInfo.js\",\n  _s = $RefreshSig$();\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport { Link } from 'react-router-dom';\nimport postService from '../../services/accountService';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AccountInfo = () => {\n  _s();\n  const [accounts, setAccounts] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    setIsLoading(true);\n    postService.getAllAccountsByUserId().then(response => {\n      setAccounts(response.data);\n      setIsLoading(false);\n    }).catch(error => {\n      var _error$response, _error$response$data;\n      console.error('Error fetching accounts:', error);\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'An error occurred while fetching accounts.');\n      setIsLoading(false);\n    });\n  }, []);\n  const handleAccountClick = account => {\n    navigate('/accountDetails', {\n      state: {\n        account\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading accounts...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/createaccount\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              size: \"lg\",\n              className: \"mb-4\",\n              children: \"Create account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-danger mt-3\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), accounts.map(account => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            onClick: () => handleAccountClick(account),\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              border: \"dark\",\n              style: {\n                width: '40 rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: [\"Account Type: \", account.accountType]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: [\"Account Number: \", account.accountNumber]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: [\"Account Id: \", account.id]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 19\n            }, this)\n          }, account.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(AccountInfo, \"4dp10rBD9TF4ltwKoaBUE+3ZDOQ=\", false, function () {\n  return [useNavigate];\n});\n_c = AccountInfo;\nexport default AccountInfo;\nvar _c;\n$RefreshReg$(_c, \"AccountInfo\");","map":{"version":3,"names":["Button","Card","Link","postService","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","AccountInfo","_s","accounts","setAccounts","isLoading","setIsLoading","error","setError","navigate","getAllAccountsByUserId","then","response","data","catch","_error$response","_error$response$data","console","message","handleAccountClick","account","state","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","variant","size","map","onClick","border","style","width","Header","accountType","Body","Title","accountNumber","Text","id","_c","$RefreshReg$"],"sources":["/Users/architapalkar/Desktop/System-Protocol-Project/Secure-banking-system/src/pages/AccountInfo/AccountInfo.js"],"sourcesContent":["import Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport { Link } from 'react-router-dom';\nimport postService from '../../services/accountService';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst AccountInfo = () => {\n  const [accounts, setAccounts] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const navigate=useNavigate();\n\n  useEffect(() => {\n    setIsLoading(true);\n    postService.getAllAccountsByUserId()\n      .then((response) => {\n        setAccounts(response.data);\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        console.error('Error fetching accounts:', error);\n        setError(error.response?.data?.message || 'An error occurred while fetching accounts.');\n        setIsLoading(false);\n      });\n  }, []);\n  const handleAccountClick = (account) => {\n    navigate('/accountDetails', { state: { account } });\n  };\n  return (\n    <div className=\"container\">\n      <div className=\"mt-4\">\n        <div className=\"mb-4\">\n          {isLoading ? (\n            <div>Loading accounts...</div>\n          ) : (\n            <>\n              <Link to='/createaccount'>\n                <Button variant=\"secondary\" size=\"lg\" className='mb-4'>\n                  Create account\n                </Button>\n              </Link>\n              {error && <div className=\"alert alert-danger mt-3\">{error}</div>}\n              {accounts.map((account) => (\n                <div key={account.id} className='mb-4' onClick={() => handleAccountClick(account)}>\n                  <Card border=\"dark\" style={{ width: '40 rem' }}>\n                    <Card.Header>Account Type: {account.accountType}</Card.Header>\n                    <Card.Body>\n                      <Card.Title>Account Number: {account.accountNumber}</Card.Title>\n                      <Card.Text>\n                        Account Id: {account.id}\n                      </Card.Text>\n                    </Card.Body>\n                  </Card>\n                </div>\n              ))}\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AccountInfo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}